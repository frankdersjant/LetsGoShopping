@model WebUI.ViewModels.ProductVM

@{
    ViewBag.Title = "Edit Product";
}
@*<style>
        input#ImageName {
            display: none;
        }
    </style>*@

@if (TempData["SM"] != null)
{
    <div class="alert alert-success">@TempData["SM"]</div>
}


<h2>Edit Product</h2>

@using (Html.BeginForm("EditProduct", "Shop", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryId, Model.Categories, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageName, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.ImageName, new { htmlAttributes = new { @class = "form-control" } })
            <div class="col-md-10">
                <br />
                <img src="/Images/Uploads/Products/@Model.Id/Thumbs/@Model.ImageName" />
                <br />
                <img src="#" id="imgpreview" />
                <br />
                <div class="col-md-10">
                    <input type="file" name="file" id="fileUpload" />
                </div>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Edit Product" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Products", "Products", new { page = 1 })
</div>

@section Scripts{
    <script>
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $("img#imgpreview")
                        .attr("src", e.target.result)
                        .width(80)
                        .height(80);
                }
                reader.readAsDataURL(input.files[0]);
            }
        }

        $("#fileUpload").change(function () {
            readURL(this);
        });
    </script>
}

